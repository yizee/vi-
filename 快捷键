第一种叫“命令模式”(command mode)： 可以通过这样的命令进入vi编辑器，进去以后那种状态就是一个“命令模式”状态：
启动终端Terminal,直接输入~/.bash_profile
会显示 No such file or directory

进入当前用户的home目录
输入cd ~

创建.bash_profile
输入touch .bash_profile

打开编辑.bash_profile文件
输入open -e .bash_profile

保存文件，关闭.bash_profile

更新刚配置的环境变量
输入source .bash_profile

第二种叫“输入模式”(insert mode)： 其实这就是一个编辑状态。

1:按下“i”键进入编译模式，就是insert，可以开始编辑了。 编辑完了，按esc键，又出去了，到“命令模式”

第三种叫“末行模式/底行模式”(last line mode)： 说白了，末行/底行说的就是“都编辑完了，再来最后一行指明要怎么处理这个文件，
是保存，还是保存退出，还是强制保存什么的” 怎么进入这个模式呢？ 在esc退出输入模式的状态下，按“:”键。英文冒号啊！ 这时候会让你输入处理文件的命令。

2:输入":w"(保存编辑后的文件内容，但不退出vim编辑器。这个命令的作用是把内存缓冲区中的数据写到启动vim时指定的文件中)

3:输入":w"(强制写文件，即强制覆盖原有文件。如果原有文件的访问权限不允许写入文件，例如，原有的文件为只读文件，则可使用这个命令强制写入。但是，这种命令用法仅当用户是文件的属主时才适用，而超级用户则不受此限制)

4:输入":wq"(保存文件内容后退出vim编辑器。这个命令的作用是把内存缓冲区中的数据写到启动vim时指定的文件中，然后退出vim编辑器。另外一种替代的方法是用ZZ命令)

5:输入":wq!"(强制保存文件内容后退出vim编辑器。这个命令的作用是把内存缓冲区中的数据强制写到启动vim时指定的文件中，然后退出vim编辑器)

6:输入"zz"(使用ZZ命令时，如果文件已经做过编辑处理，则把内存缓冲区中的数据写到启动vim时指定的文件中，然后退出vim编辑器。否则只是退出vim而已。注意，ZZ命令前面无需加冒号“：”，也无需按Enter键)

7:输入":q"(在未做任何编辑处理而准备退出vim时，可以使用此命令。如果已做过编辑处理，则vim不允许用户使用“:q”命令退出)

8:(:q!)强制退出vim编辑器，放弃编辑处理的结果。如果确实不需要保存修改后的文件内容，可输入“:q!”命令，强行退出vim编辑器。

9:":w filename "把编辑处理后的结果写到指定的文件中保存

10:":wq! filename"把编辑处理后的结果强制保存到指定的文件中，如果文件已经存在，则覆盖现有文件，并退出vim编辑器。*

